Description: Revert ABI breakage https://github.com/jbeder/yaml-cpp/issues/789
   * debian/patches/774f25800e6f19f4b927023c85d1389af322da5e.patch:
Author: Gianfranco Costamagna <locutusofborg@debian.org>
Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=959201
Forwarded: https://github.com/jbeder/yaml-cpp/issues/789
Last-Update: 2020-05-08

--- yaml-cpp-0.6.3.orig/include/yaml-cpp/node/detail/node_data.h
+++ yaml-cpp-0.6.3/include/yaml-cpp/node/detail/node_data.h
@@ -81,7 +81,7 @@ class YAML_CPP_API node_data {
                     shared_memory_holder pMemory);
 
  public:
-  static const std::string& empty_scalar();
+  static std::string empty_scalar;
 
  private:
   void compute_seq_size() const;
--- yaml-cpp-0.6.3.orig/include/yaml-cpp/node/impl.h
+++ yaml-cpp-0.6.3/include/yaml-cpp/node/impl.h
@@ -166,13 +166,13 @@ inline T Node::as(const S& fallback) con
 inline const std::string& Node::Scalar() const {
   if (!m_isValid)
     throw InvalidNode(m_invalidKey);
-  return m_pNode ? m_pNode->scalar() : detail::node_data::empty_scalar();
+  return m_pNode ? m_pNode->scalar() : detail::node_data::empty_scalar;
 }
 
 inline const std::string& Node::Tag() const {
   if (!m_isValid)
     throw InvalidNode(m_invalidKey);
-  return m_pNode ? m_pNode->tag() : detail::node_data::empty_scalar();
+  return m_pNode ? m_pNode->tag() : detail::node_data::empty_scalar;
 }
 
 inline void Node::SetTag(const std::string& tag) {
--- yaml-cpp-0.6.3.orig/src/node_data.cpp
+++ yaml-cpp-0.6.3/src/node_data.cpp
@@ -13,10 +13,7 @@
 namespace YAML {
 namespace detail {
 
-const std::string& node_data::empty_scalar() {
-  static const std::string svalue;
-  return svalue;
-}
+std::string node_data::empty_scalar;
 
 node_data::node_data()
     : m_isDefined(false),
